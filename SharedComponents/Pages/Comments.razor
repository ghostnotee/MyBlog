@using SharedComponents.ReusableComponents
@inject IBlogApi Api

<h3>Comments</h3>
@foreach (var c in _comments)
{
    <div class="media mb-4">
        <div class="media-body">
            <h5 class="mt-0">@c.Name</h5>
            <p>@c.Text</p>
            <small class="text-muted">@c.Date</small>
        </div>
    </div>
}

@if (Model != null)
{
    <EditForm Enhance method="post" Model="@Model" OnValidSubmit="@ValidSubmitAsync" FormName="CommentForm">
        <DataAnnotationsValidator/>
        <CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider"/>
        <BlogInputText @bind-Value="Model.Name" Label="Name"/>
        <BlogInputText @bind-Value="Model.Text" Label="Comment"/>
        <button type="submit">Add Comment</button>
    </EditForm>
}

@code{
    [Parameter] [EditorRequired] public required string? BlogPostId { get; set; }
    [SupplyParameterFromForm] public Comment? Model { get; set; } = new();
    List<Comment> _comments = [];

    protected override async Task OnInitializedAsync()
    {
        _comments = await Api.GetCommentsAsync(BlogPostId) ?? [];
    }

    private async Task ValidSubmitAsync()
    {
        Model!.Id = Guid.NewGuid().ToString();
        Model.Date = DateTime.Now;
        Model.BlogPostId = BlogPostId;
        await Api.SaveCommentAsync(Model);
        _comments = await Api.GetCommentsAsync(BlogPostId) ?? [];
    }

}