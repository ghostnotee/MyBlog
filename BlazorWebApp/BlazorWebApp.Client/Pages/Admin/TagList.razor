@page "/admin/tags"
@using Data.Models
@using Data.Models.Interfaces
@using SharedComponents
@using SharedComponents.ReusableComponents
@rendermode InteractiveWebAssembly
@inject IBlogApi Api
@attribute [Authorize]

<h3>Tags</h3>

<EditForm OnValidSubmit="Save" Model="Item">
    <DataAnnotationsValidator/>
    <CustomCssClassProvider
        ProviderType="BootstrapFieldCssClassProvider"/>
    <BlogInputText @bind-Value="@Item.Name" Label="Name"/>
    <BlogButton Type="BlogButton.ButtonType.Save">Save</BlogButton>
</EditForm>

<ItemList Items="Items" DeleteEvent="@Delete" SelectEvent="@Select" ItemType="Tag">
    <ItemTemplate>
        @{
            var item = context;
            if (item != null)
            {
                @item.Name
            }
        }
    </ItemTemplate>
</ItemList>


@code {
    private List<Tag> Items { get; set; } = new();
    public Tag Item { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Items = await Api.GetTagsAsync() ?? new List<Tag>();
        await base.OnInitializedAsync();
    }

    private async Task Delete(Tag tag)
    {
        try
        {
            await Api.DeleteTagAsync(tag.Id!);
            Items.Remove(tag);
        }
        catch
        {
        }
    }

    private async Task Save()
    {
        try
        {
            await Api.SaveTagAsync(Item);
            if (!Items.Contains(Item))
            {
                Items.Add(Item);
            }

            Item = new Tag();
        }
        catch
        {
        }
    }

    private Task Select(Tag tag)
    {
        try
        {
            Item = tag;
        }
        catch
        {
        }

        return Task.CompletedTask;
    }

}